@page "/weather"
@using AspireWithDapr.Shared
@using Microsoft.Extensions.Logging
@* @attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)] *@
@rendermode InteractiveServer
@inject ILogger<Weather> Logger
@inject WeatherApiClient WeatherApi

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data loaded from a backend API service.</p>

<select title="Select a city" @bind=selectedCity @bind:after=Foo>
    @foreach (var city in SharedCollections.Cities)
    {
        <option>@city</option>
    }
</select>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string selectedCity = "";

    private WeatherForecast[]? forecasts;

    private async Task Foo()
    {
        Logger.LogInformation("Getting weather forecast for {city}", selectedCity);
        forecasts = await WeatherApi.GetWeatherAsync(selectedCity);
    }
}
